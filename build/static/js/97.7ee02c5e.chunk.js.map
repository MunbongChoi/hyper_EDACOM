{"version":3,"sources":["components/PageTitle.js","pages/uikit/DragDrop.js"],"names":["PageTitle","props","className","to","breadCrumbItems","map","item","index","active","key","label","path","title","Item","color","classNames","DragDrop","state","items","onDragEnd","bind","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","this","source","setState","Fragment","droppableId","direction","provided","snapshot","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","Component"],"mappings":"mHACA,qEA2CeA,IA9BG,SAACC,GACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAEHF,EAAMG,gBAAgBC,KAAI,SAACC,EAAMC,GAC9B,OAAOD,EAAKE,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACC,IAAKF,GACvBD,EAAKI,OAGV,kBAAC,IAAD,CAAgBD,IAAKF,GACjB,kBAAC,IAAD,CAAMJ,GAAIG,EAAKK,MAAOL,EAAKI,aAM/C,wBAAIR,UAAU,cAAcD,EAAMW,Y,qLC9BhDC,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZ,OACI,kBAAC,IAAD,CAAMZ,UAAWa,IAAW,OAAQ,OAAQ,aAAc,MAAQD,IAC9D,kBAAC,IAAD,KACI,gCAAYZ,UAAU,uBAClB,oHACA,qDACsB,0BAAMU,MAAM,gBAAZ,qBAuBpCI,E,kDACF,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAEDgB,MAAQ,CACTC,MAAO,IAGX,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPF,E,6CAcnB,SAAUC,GAEN,GAAKA,EAAOC,YAAZ,CAIA,IAAMJ,EA9BE,SAACK,EAAMC,EAAYC,GAC/B,IAAMJ,EAASK,MAAMC,KAAKJ,GAC1B,EAAkBF,EAAOO,OAAOJ,EAAY,GAArCK,EAAP,oBAGA,OAFAR,EAAOO,OAAOH,EAAU,EAAGI,GAEpBR,EAyBWS,CAAQC,KAAKd,MAAMC,MAAOG,EAAOW,OAAOzB,MAAOc,EAAOC,YAAYf,OAEhFwB,KAAKE,SAAS,CACVf,a,oBAIR,WACI,OACI,kBAAC,IAAMgB,SAAP,KACI,kBAAC,IAAD,CACI9B,gBAAiB,CACb,CAAEM,MAAO,KAAMC,KAAM,gBACrB,CAAED,MAAO,cAAeC,KAAM,gBAC9B,CAAED,MAAO,gBAAiBC,KAAM,eAAgBH,QAAQ,IAE5DI,MAAO,kBAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBO,UAAWY,KAAKZ,WAC7B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWgB,YAAY,YAAYC,UAAU,eACxC,SAACC,EAAUC,GAAX,OACG,yBAAKC,IAAKF,EAASG,UACf,wBAAItC,UAAU,gBAAd,gCACA,uBAAGA,UAAU,sBAAb,iCAGA,yBAAKA,UAAU,UACV,CAAC,UAAW,UAAW,OAAQ,UAAUG,KACtC,SAACS,EAAOP,GAAR,OACI,kBAAC,IAAD,CACIE,IAAKK,EACL2B,YAAa3B,EACbP,MAAOA,IACN,SAAC8B,EAAUC,GAAX,OACG,uCACIpC,UAAU,OACVqC,IAAKF,EAASG,UACVH,EAASK,eACTL,EAASM,iBACb,kBAAC9B,EAAD,CAAMC,MAAOA,WAMhCuB,EAASO,6B,GAzE/CC,aA0FR7B","file":"static/js/97.7ee02c5e.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst Item = ({ color }) => {\n    return (\n        <Card className={classNames('mb-0', 'mt-3', 'text-white', 'bg-' + color)}>\n            <CardBody>\n                <blockquote className=\"card-bodyquote mb-0\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                    <footer>\n                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                    </footer>\n                </blockquote>\n            </CardBody>\n        </Card>\n    );\n};\n\n/**\n * Reorders the list\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n */\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n// DragDrop\nclass DragDrop extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n        };\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    /**\n     * On drag ends\n     * @param {3} result\n     */\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\n\n        this.setState({\n            items,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'UI', path: '/ui/dragdrop' },\n                        { label: 'Extended UI', path: '/ui/dragdrop' },\n                        { label: 'Drag and Drop', path: '/ui/dragdrop', active: true },\n                    ]}\n                    title={'Drag and Drop'}\n                />\n\n                <Row>\n                    <Col>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <Row>\n                                <Col>\n                                    <Card>\n                                        <CardBody>\n                                            <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                                                {(provided, snapshot) => (\n                                                    <div ref={provided.innerRef}>\n                                                        <h4 className=\"header-title\">Simple Drag and Drop Example</h4>\n                                                        <p className=\"text-muted font-14\">\n                                                            Drag and drop cards in a list\n                                                        </p>\n                                                        <div className=\"d-flex\">\n                                                            {['primary', 'success', 'info', 'danger'].map(\n                                                                (color, index) => (\n                                                                    <Draggable\n                                                                        key={color}\n                                                                        draggableId={color}\n                                                                        index={index}>\n                                                                        {(provided, snapshot) => (\n                                                                            <div\n                                                                                className=\"mr-2\"\n                                                                                ref={provided.innerRef}\n                                                                                {...provided.draggableProps}\n                                                                                {...provided.dragHandleProps}>\n                                                                                <Item color={color} />\n                                                                            </div>\n                                                                        )}\n                                                                    </Draggable>\n                                                                )\n                                                            )}\n                                                            {provided.placeholder}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Droppable>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </DragDropContext>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DragDrop;\n"],"sourceRoot":""}