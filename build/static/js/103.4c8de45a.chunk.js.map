{"version":3,"sources":["pages/apps/Ecommerce/Products.js"],"names":["TableWithSeletableRows","mainProps","SearchBar","Search","bootstrap4","pagination","paginationFactory","paginationOptions","paginationTotalRenderer","from","to","size","className","custom","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","caret","tag","type","map","option","idx","key","classNames","active","page","onClick","text","keyField","data","columns","paginationProps","paginationTableProps","search","props","md","searchProps","baseProps","bordered","headerClasses","wrapperClasses","dataSize","products","length","Products","dataField","sort","formatter","cell","row","rowIndex","extraData","rating","emptyStars","src","image","alt","name","title","height","Array","x","i","status","isDummyColumn","classes","breadCrumbItems","label","path","sm","color","paginationSize","pageStartIndex","withFirstAndLast","showTotal","sizePerPageList","value"],"mappings":"iVA4BMA,EAAyB,SAAAC,GAC3B,IA6BQC,EAAcC,SAAdD,UAER,OACI,kBAAC,qBAAD,CACIE,YAAU,EACVC,WAAYC,IAAkB,2BACvBL,EAAUM,mBADY,IAEzBC,wBApCQ,SAACC,EAAMC,EAAIC,GAAX,OAChB,2BAAOC,UAAU,+CAAjB,WACaH,EADb,OACuBC,EADvB,OAC+BC,IAmCvBE,QAAQ,EACRC,oBAhCgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAiBC,EAA7B,EAA6BA,oBAA7B,OACxB,kBAAC,IAAMC,SAAP,KACI,2BAAON,UAAU,iBAAjB,WACA,kBAAC,IAAD,CAAsBA,UAAU,YAC5B,kBAAC,IAAD,CAAgBO,OAAK,EAACC,IAAI,SAASC,KAAK,SAAST,UAAU,oCACtDI,GAEL,kBAAC,IAAD,KACKD,EAAQO,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,IAAD,CACIC,IAAKD,EACLH,KAAK,SACLT,UAAWc,IAAW,CAAEC,OAAQX,EAAkB,KAAOO,EAAOK,KAAO,KACvEC,QAAS,kBAAMZ,EAAoBM,EAAOK,QACzCL,EAAOO,WAKxB,2BAAOlB,UAAU,iBAAjB,iBAeAmB,SAAS,KACTC,KAAM/B,EAAU+B,KAChBC,QAAShC,EAAUgC,UAClB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACG,kBAAC,IAAD,CAAiBJ,SAAS,KAAKC,KAAM/B,EAAU+B,KAAMC,QAAShC,EAAUgC,QAASG,QAAM,IAClF,SAAAC,GAAK,OACF,kBAAC,IAAMnB,SAAP,KACI,kBAAC,IAAD,CAAKN,UAAU,QACX,kBAAC,IAAD,CAAK0B,GAAI,GACL,kBAAC,gCAAkCJ,IAEvC,kBAAC,IAAD,CAAKI,GAAI,EAAG1B,UAAU,8BAAtB,WACY,kBAACV,EAAcmC,EAAME,eAIrC,kBAAC,IAAD,iBACQF,EAAMG,UADd,CAEIC,UAAU,EACVC,cAAc,cACdC,eAAe,oBACXR,IAER,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,4BAAD,iBAA+BD,EAA/B,CAAgDU,SAAUC,IAASC,WAEvE,kBAAC,IAAD,CAAKlC,UAAU,yCACX,kBAAC,2BAA6BsB,aAoLnDa,UAxKE,WAEb,IAmDMd,EAAU,CACZ,CACIe,UAAW,OACXlB,KAAM,UACNmB,MAAM,EACNC,UAxDc,SAACC,EAAMC,EAAKC,EAAUC,GACxC,IAAMC,EAASH,EAAIG,OACbC,EAAaD,EAAS,EAAI,EAAIA,EAAS,EAC7C,OACI,kBAAC,IAAMrC,SAAP,KACI,yBAAKuC,IAAKL,EAAIM,MAAOC,IAAKP,EAAIQ,KAAMC,MAAOT,EAAIQ,KAAMhD,UAAU,eAAekD,OAAO,OACrF,uBAAGlD,UAAU,2CACT,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,aAClBwC,EAAIQ,MAET,6BACC,YAAIG,MAAMR,IAASjC,KAAI,SAAC0C,EAAGC,GAAJ,OACpB,0BAAMxC,IAAKwC,EAAGrD,UAAU,iCAE3B,YAAImD,MAAMP,IAAalC,KAAI,SAAC0C,EAAGC,GAAJ,OACxB,0BAAMxC,IAAKwC,EAAGrD,UAAU,6CA2CxC,CACIoC,UAAW,WACXlB,KAAM,WACNmB,MAAM,GAEV,CACID,UAAW,aACXlB,KAAM,aACNmB,MAAM,GAEV,CACID,UAAW,QACXlB,KAAM,QACNmB,MAAM,GAEV,CACID,UAAW,WACXlB,KAAM,WACNmB,MAAM,GAEV,CACID,UAAW,SACXlB,KAAM,SACNmB,MAAM,EACNC,UA5Da,SAACC,EAAMC,EAAKC,EAAUC,GACvC,OACI,kBAAC,IAAMpC,SAAP,KACI,0BAAMN,UAAWc,IAAW,QAAS,CAAE,gBAAiB0B,EAAIc,OAAQ,gBAAiBd,EAAIc,UACpFd,EAAIc,OAAS,SAAW,kBA0DrC,CACIlB,UAAW,SACXmB,eAAe,EACfrC,KAAM,SACNmB,MAAM,EACNmB,QAAS,eACTlB,UA1Da,SAACC,EAAMC,EAAKC,EAAUC,GACvC,OACI,kBAAC,IAAMpC,SAAP,KACI,kBAAC,IAAD,CAAMR,GAAG,IAAIE,UAAU,eAClB,IACD,uBAAGA,UAAU,iBAEjB,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,eAClB,IACD,uBAAGA,UAAU,iCAEjB,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,eAClB,IACD,uBAAGA,UAAU,wBAsE7B,OACI,kBAAC,IAAMM,SAAP,KACI,kBAAC,IAAD,CACImD,gBAAiB,CACb,CAAEC,MAAO,YAAaC,KAAM,4BAC5B,CAAED,MAAO,WAAYC,KAAM,kBAAmB5C,QAAQ,IAE1DkC,MAAO,aAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKW,GAAI,GACL,kBAAC,IAAD,CAAQC,MAAM,SAAS7D,UAAU,QAC7B,uBAAGA,UAAU,6BADjB,iBAKJ,kBAAC,IAAD,CAAK4D,GAAI,GACL,yBAAK5D,UAAU,iBACX,kBAAC,IAAD,CAAQ6D,MAAM,UAAU7D,UAAU,aAC9B,uBAAGA,UAAU,sBAGjB,kBAAC,IAAD,CAAQ6D,MAAM,QAAQ7D,UAAU,aAAhC,UAIA,kBAAC,IAAD,CAAQ6D,MAAM,QAAQ7D,UAAU,aAAhC,aAOZ,kBAACZ,EAAD,CACIgC,KAAMa,IACNZ,QAASA,EACT1B,kBA9DF,CACtBmE,eAAgB,EAChBC,eAAgB,EAChBC,kBAAkB,EAClBC,WAAW,EACXC,gBAAiB,CACb,CACIhD,KAAM,IACNiD,MAAO,GAEX,CACIjD,KAAM,KACNiD,MAAO,IAEX,CACIjD,KAAM,KACNiD,MAAO","file":"static/js/103.4c8de45a.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory, {\n    PaginationProvider,\n    SizePerPageDropdownStandalone,\n    PaginationTotalStandalone,\n    PaginationListStandalone,\n} from 'react-bootstrap-table2-paginator';\nimport classNames from 'classnames';\n\nimport PageTitle from '../../../components/PageTitle';\nimport { products } from './Data';\n\n// the table with selectable records\nconst TableWithSeletableRows = mainProps => {\n    const customTotal = (from, to, size) => (\n        <label className=\"react-bootstrap-table-pagination-total ml-2\">\n            Showing {from} to {to} of {size}\n        </label>\n    );\n\n    const sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\n        <React.Fragment>\n            <label className=\"d-inline mr-1\">Display</label>\n            <UncontrolledDropdown className=\"d-inline\">\n                <DropdownToggle caret tag=\"button\" type=\"button\" className=\"btn btn-outline-secondary btn-sm\">\n                    {currSizePerPage}\n                </DropdownToggle>\n                <DropdownMenu>\n                    {options.map((option, idx) => (\n                        <DropdownItem\n                            key={idx}\n                            type=\"button\"\n                            className={classNames({ active: currSizePerPage + '' === option.page + '' })}\n                            onClick={() => onSizePerPageChange(option.page)}>\n                            {option.text}\n                        </DropdownItem>\n                    ))}\n                </DropdownMenu>\n            </UncontrolledDropdown>\n            <label className=\"d-inline ml-1\">products</label>\n        </React.Fragment>\n    );\n\n    const { SearchBar } = Search;\n\n    return (\n        <PaginationProvider\n            bootstrap4\n            pagination={paginationFactory({\n                ...mainProps.paginationOptions,\n                paginationTotalRenderer: customTotal,\n                custom: true,\n                sizePerPageRenderer: sizePerPageRenderer,\n            })}\n            keyField=\"id\"\n            data={mainProps.data}\n            columns={mainProps.columns}>\n            {({ paginationProps, paginationTableProps }) => (\n                <ToolkitProvider keyField=\"id\" data={mainProps.data} columns={mainProps.columns} search>\n                    {props => (\n                        <React.Fragment>\n                            <Row className=\"mt-2\">\n                                <Col md={6}>\n                                    <SizePerPageDropdownStandalone {...paginationProps} />\n                                </Col>\n                                <Col md={6} className=\"text-sm-right mt-2 mt-sm-0\">\n                                    Search: <SearchBar {...props.searchProps} />\n                                </Col>\n                            </Row>\n\n                            <BootstrapTable\n                                {...props.baseProps}\n                                bordered={false}\n                                headerClasses=\"thead-light\"\n                                wrapperClasses=\"table-responsive\"\n                                {...paginationTableProps}\n                            />\n                            <Row>\n                                <Col>\n                                    <PaginationTotalStandalone {...paginationProps} dataSize={products.length} />\n                                </Col>\n                                <Col className=\"react-bootstrap-table-pagination-list\">\n                                    <PaginationListStandalone {...paginationProps} />\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    )}\n                </ToolkitProvider>\n            )}\n        </PaginationProvider>\n    );\n};\n\n// main component\nconst Products = () => {\n    // custom column render\n    const ProductColumn = (cell, row, rowIndex, extraData) => {\n        const rating = row.rating;\n        const emptyStars = rating < 5 ? 5 - rating : 0;\n        return (\n            <React.Fragment>\n                <img src={row.image} alt={row.name} title={row.name} className=\"rounded mr-3\" height=\"48\" />\n                <p className=\"m-0 d-inline-block align-middle font-16\">\n                    <Link to=\"/\" className=\"text-body\">\n                        {row.name}\n                    </Link>\n                    <br />\n                    {[...Array(rating)].map((x, i) => (\n                        <span key={i} className=\"text-warning mdi mdi-star\"></span>\n                    ))}\n                    {[...Array(emptyStars)].map((x, i) => (\n                        <span key={i} className=\"text-warning mdi mdi-star-outline\"></span>\n                    ))}\n                </p>\n            </React.Fragment>\n        );\n    };\n\n    const StatusColumn = (cell, row, rowIndex, extraData) => {\n        return (\n            <React.Fragment>\n                <span className={classNames('badge', { 'badge-success': row.status, 'badge-danger': !row.status })}>\n                    {row.status ? 'Active' : 'Deactivated'}\n                </span>\n            </React.Fragment>\n        );\n    };\n\n    const ActionColumn = (cell, row, rowIndex, extraData) => {\n        return (\n            <React.Fragment>\n                <Link to=\"/\" className=\"action-icon\">\n                    {' '}\n                    <i className=\"mdi mdi-eye\"></i>\n                </Link>\n                <Link to=\"/\" className=\"action-icon\">\n                    {' '}\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n                <Link to=\"/\" className=\"action-icon\">\n                    {' '}\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    const columns = [\n        {\n            dataField: 'name',\n            text: 'Product',\n            sort: true,\n            formatter: ProductColumn\n        },\n        {\n            dataField: 'category',\n            text: 'Category',\n            sort: false,\n        },\n        {\n            dataField: 'added_date',\n            text: 'Added Date',\n            sort: false,\n        },\n        {\n            dataField: 'price',\n            text: 'Price',\n            sort: false,\n        },\n        {\n            dataField: 'quantity',\n            text: 'Quantity',\n            sort: false,\n        },\n        {\n            dataField: 'status',\n            text: 'Status',\n            sort: false,\n            formatter: StatusColumn,\n        },\n        {\n            dataField: 'action',\n            isDummyColumn: true,\n            text: 'Action',\n            sort: false,\n            classes: 'table-action',\n            formatter: ActionColumn,\n        },\n    ];\n\n    const paginationOptions = {\n        paginationSize: 5,\n        pageStartIndex: 1,\n        withFirstAndLast: false,\n        showTotal: true,\n        sizePerPageList: [\n            {\n                text: '5',\n                value: 5,\n            },\n            {\n                text: '10',\n                value: 10,\n            },\n            {\n                text: '25',\n                value: 25,\n            },\n        ],\n    };\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/products' },\n                    { label: 'Products', path: '/apps/ecommerce', active: true },\n                ]}\n                title={'Products'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <Col sm={4}>\n                                    <Button color=\"danger\" className=\"mb-2\">\n                                        <i className=\"mdi mdi-plus-circle mr-2\"></i> Add Product\n                                    </Button>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-right\">\n                                        <Button color=\"success\" className=\"mb-2 mr-1\">\n                                            <i className=\"mdi mdi-settings\"></i>\n                                        </Button>\n\n                                        <Button color=\"light\" className=\"mb-2 mr-1\">\n                                            Import\n                                        </Button>\n\n                                        <Button color=\"light\" className=\"mb-2 mr-1\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <TableWithSeletableRows\n                                data={products}\n                                columns={columns}\n                                paginationOptions={paginationOptions}\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Products;\n"],"sourceRoot":""}