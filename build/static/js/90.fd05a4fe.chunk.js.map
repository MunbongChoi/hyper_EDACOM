{"version":3,"sources":["components/PageTitle.js","pages/forms/Advanced.js","components/Datepicker.js"],"names":["PageTitle","props","className","to","breadCrumbItems","map","item","index","active","key","label","path","title","ReactSelect","href","classNamePrefix","options","value","isMulti","Typeaheads","id","labelKey","multiple","placeholder","DatePickers","lg","hideAddon","monthsShown","dateFormat","minDate","Date","maxDate","setDate","getDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","showTimeSelectOnly","InputMasks","mask","FormAdvanced","Fragment","DatepickerInput","onDateValueChange","console","log","bind","type","onClick","this","onChange","Component","DatepickerInputWithAddon","readOnly","HyperDatepicker","handleDateSelectChange","date","setState","startDate","state","input","customInput","selected"],"mappings":"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","file":"static/js/90.fd05a4fe.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\n\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport MaskedInput from 'react-text-mask';\n\nimport HyperDatepicker from '../../components/Datepicker';\nimport PageTitle from '../../components/PageTitle';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">\n                    <a href=\"https://github.com/JedWatson/react-select\">React select</a>\n                </h4>\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}></Select>\n\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"></Select>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">\n                    <a href=\"http://ericgio.github.io/react-bootstrap-typeahead/\">Typeahead</a>\n                </h4>\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey=\"label\"\n                    multiple={false}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                />\n\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple={true}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using <a href=\"https://reactdatepicker.com/\">ReactJS Datepicker</a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Single Date</label> <br />\n                            <HyperDatepicker hideAddon={true} />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Single Date with multiple months</label> <br />\n                            <HyperDatepicker hideAddon={true} monthsShown={2} />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Custom date format</label> <br />\n                            <HyperDatepicker hideAddon={true} dateFormat=\"yyyy-MM-dd\" />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Specific date range</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Select Time</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time only</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <a href=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">react-text-mask</a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst FormAdvanced = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default FormAdvanced;\n","// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-datepicker';\n\ntype DatepickerInputProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\nclass DatepickerInput extends Component<DatepickerInputProps> {\n    constructor(props) {\n        super(props);\n\n        this.onDateValueChange = this.onDateValueChange.bind(this);\n    }\n\n    onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control date\"\n                id=\"dash-daterange\"\n                onClick={this.props.onClick}\n                value={this.props.value}\n                onChange={this.onDateValueChange}\n            />\n        );\n    }\n}\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\n\nclass DatepickerInputWithAddon extends Component<DatepickerInputWithAddonProps> {\n    render() {\n        return (\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control form-control-light\"\n                    id=\"dash-daterange\"\n                    onClick={this.props.onClick}\n                    value={this.props.value}\n                    readOnly\n                />\n\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text bg-primary border-primary text-white\">\n                        <i className=\"mdi mdi-calendar-range font-13\"></i>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype HyperDatepickerProps = {\n    hideAddon?: boolean,\n};\n\ntype HyperDatepickerState = {\n    startDate?: Date,\n};\n\nclass HyperDatepicker extends Component<HyperDatepickerProps, HyperDatepickerState> {\n    constructor(props: HyperDatepickerProps) {\n        super(props);\n        this.state = {\n            startDate: new Date(),\n        };\n        this.handleDateSelectChange = this.handleDateSelectChange.bind(this);\n    }\n\n    handleDateSelectChange = (date: any) => {\n        this.setState({\n            startDate: date,\n        });\n    };\n\n    render() {\n        const input = (this.props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n        return (\n            <DatePicker\n                {...this.props}\n                customInput={input}\n                selected={this.state.startDate}\n                onChange={this.handleDateSelectChange}\n            />\n        );\n    }\n}\n\nexport default HyperDatepicker;\n"],"sourceRoot":""}