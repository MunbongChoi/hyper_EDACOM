{"version":3,"sources":["components/PageTitle.js","pages/GoogleMaps.js"],"names":["PageTitle","props","className","to","breadCrumbItems","map","item","index","active","key","label","path","title","BasicMap","google","zoom","initialCenter","lat","lng","style","width","height","position","MapWithMarker","name","StreetViewMap","mapRef","ref","streetViewControl","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleApiWrapper","apiKey","Fragment","lg"],"mappings":"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","file":"static/js/93.3065c30b.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\n\r\nconst BasicMap = props => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\r\n\r\n                <div className=\"gmaps\">\r\n                    <Map\r\n                        google={props.google}\r\n                        zoom={7}\r\n                        initialCenter={{ lat: 37.63331412505147, lng: 126.97672113547358 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}></Map>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst MapWithMarker = props => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\r\n                <div className=\"gmaps\">\r\n                    <Map\r\n                        google={props.google}\r\n                        zoom={18}\r\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n                        <Marker\r\n                            title={'This is sweet home.'}\r\n                            name={'Home sweet home!'}\r\n                            position={{ lat: 21.569874, lng: 71.5893798 }}></Marker>\r\n                    </Map>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst StreetViewMap = props => {\r\n    let mapRef = { map: {} };\r\n\r\n    /**\r\n     * Activate the street view\r\n     */\r\n    const activateStreetView = position => {\r\n        if (mapRef) {\r\n            const mapObj = mapRef.map.getStreetView();\r\n            mapObj.setPov({ heading: 34, pitch: 10 });\r\n            mapObj.setPosition(position);\r\n            mapObj.setVisible(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\r\n\r\n                <div className=\"gmaps\">\r\n                    <Map\r\n                        google={props.google}\r\n                        ref={map => (mapRef = map)}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        streetViewControl={true}\r\n                        onReady={() => {\r\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\r\n                        }}></Map>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst LightStyledMap = props => {\r\n    const mapStyles = [\r\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#e9e9e9' }, { lightness: 17 }] },\r\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 20 }] },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\r\n        },\r\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 18 }] },\r\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 16 }] },\r\n        { featureType: 'poi', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 21 }] },\r\n        { featureType: 'poi.park', elementType: 'geometry', stylers: [{ color: '#dedede' }, { lightness: 21 }] },\r\n        { elementType: 'labels.text.stroke', stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }] },\r\n        { elementType: 'labels.text.fill', stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }] },\r\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\r\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#f2f2f2' }, { lightness: 19 }] },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\r\n\r\n                <div className=\"gmaps\">\r\n                    <Map\r\n                        google={props.google}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        styles={mapStyles}></Map>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DarkStyledMap = props => {\r\n    const mapStyles = [\r\n        { featureType: 'all', elementType: 'labels', stylers: [{ visibility: 'on' }] },\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\r\n        },\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\r\n        },\r\n        { featureType: 'all', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\r\n        },\r\n        { featureType: 'administrative.country', elementType: 'labels.text.fill', stylers: [{ color: '#e5c163' }] },\r\n        { featureType: 'administrative.locality', elementType: 'labels.text.fill', stylers: [{ color: '#c4c4c4' }] },\r\n        {\r\n            featureType: 'administrative.neighborhood',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#e5c163' }],\r\n        },\r\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 20 }] },\r\n        {\r\n            featureType: 'poi',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\r\n        },\r\n        { featureType: 'poi.business', elementType: 'geometry', stylers: [{ visibility: 'on' }] },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\r\n        },\r\n        { featureType: 'road.highway', elementType: 'geometry.stroke', stylers: [{ visibility: 'off' }] },\r\n        { featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\r\n        { featureType: 'road.highway', elementType: 'labels.text.stroke', stylers: [{ color: '#e5c163' }] },\r\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 18 }] },\r\n        { featureType: 'road.arterial', elementType: 'geometry.fill', stylers: [{ color: '#575757' }] },\r\n        { featureType: 'road.arterial', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\r\n        { featureType: 'road.arterial', elementType: 'labels.text.stroke', stylers: [{ color: '#2c2c2c' }] },\r\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 16 }] },\r\n        { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: '#999999' }] },\r\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 19 }] },\r\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 17 }] },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-3\">Dark</h4>\r\n\r\n                <div className=\"gmaps\">\r\n                    <Map\r\n                        google={props.google}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        styles={mapStyles}></Map>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst GoogleMaps = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Maps', path: '/features/googlemaps' },\r\n                    { label: 'Google Maps', path: '/features/googlemaps', active: true },\r\n                ]}\r\n                title={'Google Maps'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <BasicMap google={props.google} />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <MapWithMarker google={props.google} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <StreetViewMap google={props.google} />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <LightStyledMap google={props.google} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <DarkStyledMap google={props.google} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\r\n})(GoogleMaps);\r\n"],"sourceRoot":""}