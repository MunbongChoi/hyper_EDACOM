{"version":3,"sources":["components/PageTitle.js","pages/tables/Basic.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Table.js"],"names":["PageTitle","props","className","to","breadCrumbItems","map","item","index","active","key","label","path","title","records","id","firstName","lastName","username","BasicTable","record","scope","InverseTable","dark","StripedRowsTable","striped","BorderedTable","bordered","HoverableTable","hover","SmallTable","size","ResponsiveTable","responsive","Tables","Fragment","xl","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","rowColsPropType","oneOfType","number","noGutters","form","xs","sm","md","lg","widths","Row","colClasses","forEach","colWidth","i","colSize","isXs","push","stringOrNumberProp","columnProps","shape","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","inverse","color","body","outline","innerRef","func","Card","ref","CardBody","borderless","responsiveTag","Table","ResponsiveTag","table","responsiveClassName"],"mappings":"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","file":"static/js/61.cf57dfa7.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Table } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst records = [\n    { id: 1, firstName: 'Mark', lastName: 'Otto', username: '@mdo' },\n    { id: 2, firstName: 'Jacob', lastName: 'Thornton', username: '@fat' },\n    { id: 3, firstName: 'Dave', lastName: 'G', username: '@dave' },\n    { id: 4, firstName: 'Nik', lastName: 'N', username: '@nikn' },\n    { id: 5, firstName: 'Shreyu', lastName: 'Navadiya', username: '@sn' },\n];\n\nconst BasicTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Basic example</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Just use <code>Table</code> element\n                </p>\n\n                <Table className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst InverseTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Inverse Table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    You can also invert the colors—with light text on dark backgrounds—by specifying <code>dark</code>{' '}\n                    attribute\n                </p>\n\n                <Table className=\"mb-0\" dark>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst StripedRowsTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Striped Rows</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>striped</code> attribute to table\n                </p>\n\n                <Table className=\"mb-0\" striped>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst BorderedTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Bordered table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>bordered</code> attribute for borders on all sides of the table and cells.\n                </p>\n\n                <Table className=\"mb-0\" bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HoverableTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Hoverable Rows</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>hover</code> attribute to enable a hover state on table rows\n                </p>\n\n                <Table className=\"mb-0\" hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst SmallTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Small table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>size=\"sm\"</code> attribute to make tables more compact by cutting cell padding in half\n                </p>\n\n                <Table className=\"mb-0\" size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst ResponsiveTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Always responsive</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Across every breakpoint, use <code>responsive</code> attribute to create responsive tables\n                </p>\n\n                <Table className=\"mb-0\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Tables = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Tables', path: '/features/tables/basic' },\n                    { label: 'Basic Tables', path: '/features/tables/basic', active: true },\n                ]}\n                title={'Basic Tables'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BasicTable />\n                </Col>\n\n                <Col xl={6}>\n                    <InverseTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StripedRowsTable />\n                </Col>\n\n                <Col xl={6}>\n                    <BorderedTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <HoverableTable />\n                </Col>\n\n                <Col xl={6}>\n                    <SmallTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <ResponsiveTable />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Tables;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}