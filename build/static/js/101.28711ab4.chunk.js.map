{"version":3,"sources":["components/PageTitle.js","pages/uikit/Tooltips.js"],"names":["PageTitle","props","className","to","breadCrumbItems","map","item","index","active","key","label","path","title","Basic","href","id","placement","target","Direction","text","tooltip","i","Fragment","type","color","HtmlContent","Tooltips","xl"],"mappings":"oHACA,qEA2CeA,IA9BG,SAACC,GACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAEHF,EAAMG,gBAAgBC,KAAI,SAACC,EAAMC,GAC9B,OAAOD,EAAKE,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACC,IAAKF,GACvBD,EAAKI,OAGV,kBAAC,IAAD,CAAgBD,IAAKF,GACjB,kBAAC,IAAD,CAAMJ,GAAIG,EAAKK,MAAOL,EAAKI,aAM/C,wBAAIR,UAAU,cAAcD,EAAMW,Y,kCCpCtD,0FAKMC,EAAQ,WACV,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIX,UAAU,gBAAd,YACA,uBAAGA,UAAU,sBAAb,+CAEA,uBAAGA,UAAU,cAAb,kCACoC,IAChC,uBAAGY,KAAK,IAAIC,GAAG,YAAf,gBAEK,IAJT,kLAMsF,IAClF,uBAAGD,KAAK,IAAIC,GAAG,YAAf,QAEK,IATT,mMAWwG,IACpG,uBAAGD,KAAK,IAAIC,GAAG,YAAf,YAEK,IAdT,mHAkBA,kBAAC,IAAD,CAAqBC,UAAU,MAAMC,OAAO,YAA5C,gBAGA,kBAAC,IAAD,CAAqBD,UAAU,QAAQC,OAAO,YAA9C,mBAGA,kBAAC,IAAD,CAAqBD,UAAU,SAASC,OAAO,YAA/C,2BAQVC,EAAY,WACd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIhB,UAAU,gBAAd,mBACA,uBAAGA,UAAU,sBAAb,qEAEC,CACG,CACIc,UAAW,MACXG,KAAM,OAEV,CACIH,UAAW,SACXG,KAAM,UAEV,CACIH,UAAW,OACXG,KAAM,QAEV,CACIH,UAAW,QACXG,KAAM,UAEZd,KAAI,SAACe,EAASC,GACZ,OACI,kBAAC,IAAMC,SAAP,CAAgBb,IAAKY,GACjB,kBAAC,IAAD,CAAQN,GAAE,kBAAaK,EAAQJ,WAAaO,KAAK,SAASC,MAAM,UAAUtB,UAAU,QAApF,cACgBkB,EAAQD,MAExB,kBAAC,IAAD,CAAqBH,UAAWI,EAAQJ,UAAWC,OAAM,kBAAaG,EAAQJ,YAA9E,cACgBI,EAAQJ,kBAU9CS,EAAc,WAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIvB,UAAU,gBAAd,aACA,uBAAGA,UAAU,sBAAb,+BAEA,kBAAC,IAAD,CAAQa,GAAG,WAAWQ,KAAK,SAASC,MAAM,UAAUtB,UAAU,QAA9D,0BAGA,kBAAC,IAAD,CAAqBc,UAAU,SAASC,OAAO,YAA/C,gBACiB,uBAAGH,KAAK,KAAR,YAsClBY,UA/BE,WACb,OACI,kBAAC,IAAMJ,SAAP,KACI,kBAAC,IAAD,CACIlB,gBAAiB,CACb,CAAEM,MAAO,KAAMC,KAAM,gBACrB,CAAED,MAAO,UAAWC,KAAM,gBAC1B,CAAED,MAAO,WAAYC,KAAM,eAAgBH,QAAQ,IAEvDI,MAAO,aAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKe,GAAI,GACL,kBAACd,EAAD,OAEJ,kBAAC,IAAD,CAAKc,GAAI,GACL,kBAACT,EAAD,QAIR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKS,GAAI,GACL,kBAACF,EAAD,OAEJ,kBAAC,IAAD,CAAKE,GAAI","file":"static/js/101.28711ab4.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, UncontrolledTooltip, Button } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\n\n                <p className=\"muted mb-0\">\n                    Tight pants next level keffiyeh{' '}\n                    <a href=\"/\" id=\"tooltip1\">\n                        you probably\n                    </a>{' '}\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel{' '}\n                    <a href=\"/\" id=\"tooltip2\">\n                        have\n                    </a>{' '}\n                    a terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu\n                    biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan{' '}\n                    <a href=\"/\" id=\"tooltip3\">\n                        whatever\n                    </a>{' '}\n                    keytar, scenester farm-to-table banksy Austin twitter handle freegan cred raw denim single-origin\n                    coffee viral.\n                </p>\n                <UncontrolledTooltip placement=\"top\" target=\"tooltip1\">\n                    Hello world!\n                </UncontrolledTooltip>\n                <UncontrolledTooltip placement=\"right\" target=\"tooltip2\">\n                    Another tooltip\n                </UncontrolledTooltip>\n                <UncontrolledTooltip placement=\"bottom\" target=\"tooltip3\">\n                    Another one here too\n                </UncontrolledTooltip>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {[\n                    {\n                        placement: 'top',\n                        text: 'Top',\n                    },\n                    {\n                        placement: 'bottom',\n                        text: 'Bottom',\n                    },\n                    {\n                        placement: 'left',\n                        text: 'Left',\n                    },\n                    {\n                        placement: 'right',\n                        text: 'Right',\n                    },\n                ].map((tooltip, i) => {\n                    return (\n                        <React.Fragment key={i}>\n                            <Button id={`tooltip-${tooltip.placement}`} type=\"button\" color=\"primary\" className=\"mr-1\">\n                                Tooltip on {tooltip.text}\n                            </Button>\n                            <UncontrolledTooltip placement={tooltip.placement} target={`tooltip-${tooltip.placement}`}>\n                                Tooltip on {tooltip.placement}\n                            </UncontrolledTooltip>\n                        </React.Fragment>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HtmlContent = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Html Tags</h4>\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\n\n                <Button id=\"html-tag\" type=\"button\" color=\"primary\" className=\"mr-1\">\n                    Tooltip with html tags\n                </Button>\n                <UncontrolledTooltip placement=\"bottom\" target=\"html-tag\">\n                    Tooltip with <a href=\"/\">Link</a>\n                </UncontrolledTooltip>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Tooltips = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/tooltips' },\n                    { label: 'Base UI', path: '/ui/tooltips' },\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\n                ]}\n                title={'Tooltips'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <HtmlContent />\n                </Col>\n                <Col xl={6}></Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Tooltips;\n"],"sourceRoot":""}